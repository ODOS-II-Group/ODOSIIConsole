//get common library inclusion
def Common = new odos.jenkins.Common()

pipeline {
    agent any

    stages {
        stage('init'){
          steps{
            Common.runGitMergeFromBranch('Staging', 'master', GIT_URL)

            Common.slack "Build Started."
          }
        }
        stage('Build') {
            steps {
                Common.slack 'Building...'
                dir('ODOS-II-svc3') {
                  sh './gradlew bootRepackage -Pprod'
                }
            }
        }
        stage('Sonar Scan') {
          steps {
            Common.slack 'Sonar Scan and Upload...'
            dir('ODOS-II-svc3') {
              sh './gradlew sonarqube'
            }
          }
        }
        stage('Fortify Scan') {
            steps {
                Common.slack 'Fortify Scan...'
            }
        }
        stage('Build Container') {
            steps {
                Common.slack 'Packaging into a container...'
                dir('ODOS-II-svc3') {
                  Common.buildContainer('odosiisvc3')
                }
            }
        }
        stage('Twistlock Scan') {
            steps {
                Common.slack 'Twistlock Scan...'
                Common.twistlock('docker.lassiterdynamics.com:5000', 'odosiisvc3','latest')
            }
        }
        stage('Push') {
            steps {
              script{
                Common.slack 'Push to Docker Registry..'
                sh "docker push docker.lassiterdynamics.com:5000/odosiisvc3:${BUILD_ID}"
                sh 'docker push docker.lassiterdynamics.com:5000/odosiisvc3:latest'
              }
            }
        }
        stage('Test Deploy') {
            steps {
                Common.slack 'Deploying to Test Environment...'
                Common.deployToOpenShift('odos-test','odosiisvc3','latest')
            }
        }
        stage('FT') {
            steps {
                Common.slack 'Functional Testing...'

            }
        }
        stage('PT') {
            steps {
                Common.slack 'Performance Testing...'
            }
        }
        stage('Merge') {
            steps {
                Common.slack 'Merge to master branch...'
            }
        }
        stage('PP Deploy') {
            steps {
                Common.slack 'Deploying to PreProd Environment...'
            }
        }

    }
}
